package jm.task.core.jdbc.dao;

import jm.task.core.jdbc.model.User;
import jm.task.core.jdbc.util.Util;
import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

public class UserDaoHibernateImpl implements UserDao {
    private Util connect = new Util();

    public UserDaoHibernateImpl() {}

    @SuppressWarnings("deprecation")
    @Override
    public void createUsersTable() {
        try(Statement statement = connect.connection().createStatement()){
            statement.executeUpdate(
                    "CREATE TABLE IF NOT EXISTS users (" +
                            "id INTEGER  GENERATED BY DEFAULT AS IDENTITY," +
                            "firstName VARCHAR(255)," +
                            "lastName VARCHAR(255)," +
                            "age SMALLINT)");
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Что-то не так при подключении к БД! " + e);
        }
    }

    @Override
    public void dropUsersTable() {
        try(Statement statement = connect.connection().createStatement()){
            statement.executeUpdate("DROP TABLE IF EXISTS users");
        } catch (SQLException | ClassNotFoundException e) {
            System.out.println("Что-то не так при подключении к БД! " + e);
        }

    }

    @Override
    public void saveUser(String name, String lastName, byte age) {
        User user = new User(name, lastName, age);
        Session session = connect.hibConnect().getCurrentSession();
        session.save(user);
        session.close();
    }

    @Override
    public void removeUserById(long id) {

    }

    @Override
    public List<User> getAllUsers() {
        return null;
    }

    @Override
    public void cleanUsersTable() {

    }
}
